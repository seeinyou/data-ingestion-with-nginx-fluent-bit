[SERVICE]
    # Flush
    # =====
    # set an interval of seconds before to flush records to a destination
    flush        1

    # Daemon
    # ======
    # instruct Fluent Bit to run in foreground or background mode.
    daemon       Off

    # Log_Level
    # =========
    # Set the verbosity level of the service, values can be:
    #
    # - error
    # - warning
    # - info
    # - debug
    # - trace
    #
    # by default 'info' is set, that means it includes 'error' and 'warning'.
    log_level    MACRO_FLUENTBIT_LOG_LEVEL
    log_file     /var/log/fluentbit/fluentbit.log

    # Parsers File
    # ============
    # specify an optional 'Parsers' configuration file
    parsers_file parsers.conf

    # Plugins File
    # ============
    # specify an optional 'Plugins' configuration file to load external plugins.
    plugins_file plugins.conf

    # HTTP Server
    # ===========
    # Enable/Disable the built-in HTTP Server for metrics
    http_server  On
    http_listen  127.0.0.1
    http_port    2020

    # Storage
    # =======
    # Fluent Bit can use memory and filesystem buffering based mechanisms
    #
    # - https://docs.fluentbit.io/manual/administration/buffering-and-storage
    #
    # storage metrics
    # ---------------
    # publish storage pipeline metrics in '/api/v1/storage'. The metrics are
    # exported only if the 'http_server' option is enabled.
    #
    storage.metrics on

    # storage.path
    # ------------
    # absolute file system path to store filesystem data buffers (chunks).
    #
    # storage.path /tmp/storage

    # storage.sync
    # ------------
    # configure the synchronization mode used to store the data into the
    # filesystem. It can take the values normal or full.
    #
    # storage.sync normal

    # storage.checksum
    # ----------------
    # enable the data integrity check when writing and reading data from the
    # filesystem. The storage layer uses the CRC32 algorithm.
    #
    # storage.checksum off

    # storage.backlog.mem_limit
    # -------------------------
    # if storage.path is set, Fluent Bit will look for data chunks that were
    # not delivered and are still in the storage layer, these are called
    # backlog data. This option configure a hint of maximum value of memory
    # to use when processing these records.
    #
    # storage.backlog.mem_limit 5M

    # Fluent bit now supports four new configs to set up the health check.
    health_check           On
    hc_errors_count        3
    hc_retry_failure_count 3
    hc_period              10

[INPUT]
    name             tail
    path             /var/log/nginx/postdata.log
    db               /var/log/fluentbit/logs.db
    rotate_wait      1
    refresh_interval 1
    read_from_head   true
    mem_buf_limit    3000k
    parser           json

#kinesis_streams[OUTPUT]
#kinesis_streams    name   kinesis_streams
#kinesis_streams    match  *
#kinesis_streams    region MACRO_FLUENTBIT_OUTPUT_AWS_REGION
#kinesis_streams    stream MACRO_FLUENTBIT_OUTPUT_KINESIS_STREAM
#kinesis_streams    Retry_Limit False
#kafka[OUTPUT]
#kafka    Name        kafka
#kafka    Match       *
#kafka    Brokers     MACRO_KAFKA_BROKERS
#kafka    Topics      MACRO_FLUENTBIT_OUTPUT_KAFKA
#kafka    Retry_Limit False
#s3[OUTPUT]
#s3    Name s3
#s3    Match  *
#s3    region MACRO_FLUENTBIT_OUTPUT_AWS_REGION
#s3    bucket MACRO_FLUENTBIT_OUTPUT_S3
#s3    total_file_size 50M
#s3    upload_timeout 1m
#s3    store_dir /mnt/efs/fs1
#s3    s3_key_format /fluentbit-s3-data/%Y/month=%m/day=%d/hour=%H/access-%H-%M-%S
#s3    compression gzip
#s3    use_put_object On
